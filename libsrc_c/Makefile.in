#
# Makefile for libRadtran's libsrc_c directory
#
# Arve Kylling
# arve.kylling@gmail.com

TOPDIR = ..

include $(TOPDIR)/Makeconf

srcdir = @srcdir@
VPATH = @srcdir@

SOS_INCLUDES    = $(patsubst %.c, %.h, $(SOS_SOURCES))
KEY56_INCLUDES = $(patsubst %.c, %.h, $(KEY56_CSOURCES))
CLDGEN_CINCLUDES= $(patsubst %.c, %.h, $(CLDGEN_CSOURCES))

ifeq (@FOUND_LIBTENSTREAM@,yes)
TENSTREAM_INCLUDES= tenstream.h
TENSTREAM_SOURCES= tenstream.c
endif


INCLUDES = ascii.h cnv.h equation.h fortran_and_c.h function.h getopt.h cdisort.h \
	c_tzs.h integrat.h linear.h regress.h spl.h locate.h sun.h errors.h \
        numeric.h table.h wavelength.h uvspecrandom.h snow.h misc.h \
	wcloud3d.h miecalc.h phasetable.h mystic.h mystic_3d.h alis.h lidar.h rodents.h sslidar.h \
        twostrebe.h twomaxrnd.h bandec.h matrix_operations.h GLmystic.h vroom.h specrend_uvspec.h $(SOS_INCLUDES) \
        $(KEY56_INCLUDES) ocean.h $(CLDGEN_CINCLUDES) sunpos.h ambralsfor.h \
	sofi.h  netCDF_functions.h rayleigh.h raytracing.h $(TENSTREAM_INCLUDES)

SOURCES  = ascii.c cnv.c equation.c fortran_and_c.c function.c getopt.c \
	integrat.c linear.c regress.c spl.c locate.c sun.c errors.c table.c \
	wavelength.c uvspecrandom.c snow.c wcloud3d.c specrend_uvspec.c \
        miecalc.c phasetable.c raytracing.c rodents.c sslidar.c twostrebe.c twomaxrnd.c bandec.c sunpos.c sofi.c \
	netCDF_functions.c rayleigh.c cdisort.c c_tzs.c

ALL_SOURCES = $(SOURCES) $(MYSTIC_SOURCES) $(MYSTIC3D_SOURCES) $(LIDAR_SOURCES) $(SOS_SOURCES) \
              $(KEY56_CSOURCES) $(CLDGEN_CSOURCES) $(CDF2C_SOURCES) $(VROOM_SOURCES) $(BRDF_SOURCES) $(TENSTREAM_SOURCES)

OBJECTS  = $(patsubst %.c, %.o, $(ALL_SOURCES))

RADTRAN_C_LIB =  ../lib/libRadtran_c.a

DISTFILES = Makefile.in .depend \
	$(INCLUDES) $(SOURCES) $(KEY56_CSOURCES) $(SOS_SOURCES) \
	$(BRDF_SOURCES) $(MYSTIC_SOURCES) $(VROOM_SOURCES) disotest.c

MYSTICDISTFILES = $(DISTFILES) $(CLDGEN_CSOURCES) $(CDF2C_SOURCES) $(MYSTIC3D_SOURCES) 

# do we want BRDF here???
CDISORTDISTFILES = cdisort.c cdisort.h disotest.c locate.h locate.c README_cdisort \
	Makefile_cdisort ../libsrc_f/DISORT2.doc HOWTO_cdisort ../COPYING

all:  dep $(OBJECTS) $(RADTRAN_C_LIB)
.PHONY: all

dep: $(ALL_SOURCES)
	$(CC) $(CPPFLAGS) $(ALL_CFLAGS) -MM $^  > .depend
.PHONY: dep

$(RADTRAN_C_LIB): $(OBJECTS) 
	$(gcommand)
	$(RM) -f $(RADTRAN_C_LIB)
	$(AR) $(ARFLAGS) $(RADTRAN_C_LIB) $(OBJECTS) 
	$(RANLIB) $(RADTRAN_C_LIB)


install: all
	$(MKPATH) $(libdir)
	$(RM) -f $(libdir)/libRadtran_c.a
	$(INSTALL_DATA) $(RADTRAN_C_LIB) $(libdir)/libRadtran_c.a
	$(RANLIB) $(libdir)/libRadtran_c.a
	$(MKPATH) $(includedir)/libRadtran
	$(INSTALL) -m 644 $(INCLUDES) $(includedir)/libRadtran
.PHONY: install

uninstall:
	$(RM) -f $(libdir)/libRadtran_c.a
	for f in $(INCLUDES); do \
	  fbase=`basename $$f`; \
	  $(RM) -f $(includedir)/libRadtran/$$fbase; \
	done
.PHONY: uninstall

clean:
	$(RM) -f *.a *.o
.PHONY: clean

mostlyclean:
	$(RM) -f *.o
.PHONY: mostlyclean

distclean: clean
	$(RM) -f Makefile Radtran .fname *.d
.PHONY: distclean

realclean: distclean
	$(RM) -f *.o
.PHONY: realclean

dist:
	ln $(DISTFILES) ../`cat ../.fname`/libsrc_c
.PHONY: dist

mystic-dist:
	ln $(MYSTICDISTFILES) ../`cat ../.fname`/libsrc_c
.PHONY: mystic-dist

cdisort-dist:
	ln $(CDISORTDISTFILES) ../`cat ../.cname`/
.PHONY: cdisort-dist

Makefile: Makefile.in ../config.status
	cd ..; sh config.status

-include .depend
