c     Response function factor = 0.80337
      subroutine avhrr23(z0, p0, t0, u0, ux, nlev,
     *co2, n2o, f11, f12, ch4,
     *od, wght, ntau)
      INCLUDE "avhrr.inc"
      real co2, n2o, ch4, f11, f12
      real z0(mm)
      real od(6,mm)
      real wght(6)
      integer ntau,nlev
      real wi(8),xi(8),p0(mq),p(mm),t0(mq),t(mm),bnu(mm),u0(mq),u(mm),
     *ux(mq),uo3(mm),tau(6,mm),tauo3(6,mm),delw,x(mm,8),y(mm,8),
     *sx(6,mm),sy(6,mm),f(6),fac(mm),tsx(mq),tsy(mq),fo3(6)
      data xi /.01986,.10167,.23723,.40828,
     *         .59172,.76277,.89833,.98014/
      data wi /.05062,.11119,.15685,.18134,
     *         .18134,.15685,.11119,.05062/
      tb=0
      nlyr = nlev-1
      if(nlyr.GT.mm)then
        write (*,*) 'error: increase mm to at least', nlyr
        write (*,*) '       in avhrr.inc'
        return
      end if
      if(nlev.GT.mq)then
        write (*,*) 'error: increase mq to at least', nlev
        write (*,*) '       in avhrr.inc'
        return
      end if
      omega=11950.0
      delw=1900.0
      sigma=5.67e-05
      sconst=1.368e+06
      tsun=5710.0
      fsun=sigma*tsun**4
      mlv=nlyr
      do 5 m=1,nlyr
        t(m)=(t0(m)+t0(m+1))/2.0
        p(m)=(p0(m)+p0(m+1))/2.0
        call flux_23(bnu(m),omega,t(m))
        fac(m)=z0(m+1)-z0(m)
        u(m)=fac(m)*(u0(m)+u0(m+1))/2.0
        uo3(m)=fac(m)*(ux(m)+ux(m+1))/2.0
 5    continue
      do 7 m=1,nlev
        tsx(m)=0.0
        tsy(m)=0.0
 7    continue
      call flux_23(back,omega,t0(1))
      call flux_23(bsun,omega,tsun)
      bsun=bsun/fsun*sconst
      call ck_23(ni,mlv,u,delw,f,p,t,tau)
      call cko3_23(no3,mlv,uo3,delw,fo3,p,t,tauo3)
c     **fo3=1.0000**
      do 10 m=1,nlyr
        do i=1,ni
          tau(i,m)=tau(i,m)+tauo3(1,m)
c         tau(i,m)=tauo3(1,m)
        end do
 10   continue
      do 90 i=1,ni
        do 30 m=nlyr,1,-1
          do 20 j=1,8
           if(m.eq.nlyr)then
c           y(m,j)=bnu(m)*(1.0-exp(-tau(i,m)/xi(j)))
            y(m,j)=bsun*0.6*exp(-tau(i,m)/xi(j))+
     *             bnu(m)*(1.0-exp(-tau(i,m)/xi(j)))
           else
            y(m,j)=y(m+1,j)*exp(-tau(i,m)/xi(j))+
     *      bnu(m)*(1.0-exp(-tau(i,m)/xi(j)))
           end if
 20       continue
 30     continue
        do 50 m=1,nlyr
          sx(i,m)=0.0
          sy(i,m)=0.0
          do 40 j=1,8
           if(m.eq.1)then
            x(m,j)=(0.10*y(m,j)+0.90*back)*exp(-tau(i,m)/xi(j))+
     *      bnu(m)*(1.0-exp(-tau(i,m)/xi(j)))
           else
            x(m,j)=x(m-1,j)*exp(-tau(i,m)/xi(j))+
     *      bnu(m)*(1.0-exp(-tau(i,m)/xi(j)))
           end if
 40       continue
 50     continue
        do 70 m=1,nlyr
          do 60 j=1,8
            sx(i,m)=sx(i,m)+2.0*x(m,j)*wi(j)*xi(j)
            sy(i,m)=sy(i,m)+2.0*y(m,j)*wi(j)*xi(j)
 60       continue
 70     continue
        do 80 m=1,nlyr
           tsx(m+1)=tsx(m+1)+sx(i,m)*delw*f(i)
           tsy(m)=tsy(m)+sy(i,m)*delw*f(i)
 80     continue
c        tb=tb+(0.10*tsy(1))+0.90*back*delw*f(i)
        tb=tb+back*delw*f(i)
c        tsx(1)=tsx(1)+0.10*tsy(1)
c        tsy(nlev)=tsy(nlev)+bsun*0.60*delw*f(i)
 90   continue
      tb=0.10*tsy(1)+0.90*tb
      tsx(1)=tb
      tsy(nlev)=tsy(nlev)+bsun*0.60*delw
      do 95 m=1,nlev
cbm         write(6,100)m-1,tsx(m),tb-tsx(m),tsy(m)
 95   continue
      do i1=1,6
       do m=1,nlyr
        od(1+(i1-1),m) =
     *tau(i1,m)
        wght(1+(i1-1)) =
     *f(i1)
       enddo
      enddo
      ntau=6
 100  format(i3,3f15.7)
      end
c *********************************************************************
      subroutine flux_23(bnu,omega,t)
      INCLUDE "avhrr.inc"
      bnu=0.0
      z=3.14159
      bnu=z/1000.0*((2.*6.625e-27)*(2.997925e+10)**2
     *    *omega**3)/(exp(min(88.0,1.4388*omega/t))-1.0)
      return
      end
c *********************************************************************
      subroutine ck_23(ni,mlv,u,delw,f,p,t,tau)
      INCLUDE "avhrr.inc"
      real f(6),k(mm),tau(6,mm),delw,p(mm),t(mm),u(mm),coefk(6,3,19),
     *     stp(19),fkg(6,mm),pmb(mm)
      ni=6
      f(1)=0.305508
      f(2)=0.538842
      f(3)=0.065784
      f(4)=0.065509
      f(5)=0.019109
      f(6)=0.005248
      k(1)=0.000560179
      do i=2,ni
        k(i)=6.0*k(i-1)
      end do
      data ( (coefk(1,jt,jp), jp = 1, 19), jt = 1, 3)/
     *0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,
     *0.0000,0.0000,0.0000,0.00719,0.0657,0.1971,0.4179,0.7610,1.3053,
     *2.1604,
     *0.000e+00,0.000e+00,0.000e+00,0.000e+00,0.000e+00,0.000e+00,
     *0.000e+00,0.000e+00,0.000e+00,0.000e+00,0.000e+00,0.000e+00,
     *-6.775e-05,2.750e-06,3.804e-04,8.377e-04,1.764e-03,3.087e-03,
     *5.211e-03,
     *0.000e+00,0.000e+00,0.000e+00,0.000e+00,0.000e+00,0.000e+00,
     *0.000e+00,0.000e+00,0.000e+00,0.000e+00,0.000e+00,0.000e+00,
     *-3.313e-07,-1.575e-06,-3.403e-06,-5.637e-06,-1.015e-05,-1.889e-05,
     *-3.282e-05/
      data ( (coefk(2,jt,jp), jp = 1, 19), jt = 1, 3)/
     *0.0035,0.0035,0.0035,0.0035,0.0035,0.0035,0.0035,0.0035,0.0035,
     *0.0116,0.0290,0.0623,0.1186,0.2067,0.3415,0.5394,0.8180,1.2183,
     *1.7212,
     *-1.500e-06,-1.500e-06,-1.500e-06,-1.500e-06,-1.500e-06,-1.500e-06,
     *-1.500e-06,-1.500e-06,-1.500e-06,4.125e-06,1.700e-05,3.625e-05,
     *5.013e-05,6.100e-05,1.056e-04,1.793e-04,2.721e-04,4.913e-04,
     *8.957e-04,
     *-6.250e-08,-6.250e-08,-6.250e-08,-6.250e-08,-6.250e-08,-6.250e-08,
     *-6.250e-08,-6.250e-08,-6.250e-08,-1.281e-07,-3.063e-07,-5.375e-07,
     *-8.344e-07,-1.306e-06,-2.309e-06,-3.450e-06,-5.422e-06,-8.813e-06,
     *-1.001e-05/
      data ( (coefk(3,jt,jp), jp = 1, 19), jt = 1, 3)/
     *0.0277,0.0277,0.0277,0.0277,0.0277,0.0277,0.0277,0.0277,0.0277,
     *0.0516,0.0864,0.1351,0.2040,0.3016,0.4415,0.6316,0.8635,1.1517,
     *1.4753,
     *1.157e-04,1.157e-04,1.157e-04,1.157e-04,1.157e-04,1.157e-04,
     *1.157e-04,1.157e-04,1.157e-04,1.654e-04,1.966e-04,2.021e-04,
     *2.225e-04,2.437e-04,2.663e-04,3.135e-04,3.514e-04,1.939e-04,
     *-7.250e-05,
     *-5.000e-08,-5.000e-08,-5.000e-08,-5.000e-08,-5.000e-08,-5.000e-08,
     *-5.000e-08,-5.000e-08,-5.000e-08,-2.219e-07,-4.406e-07,-5.469e-07,
     *-9.187e-07,-1.050e-06,-1.669e-06,-2.425e-06,-2.416e-06,-2.344e-07,
     *1.706e-06/
      data ( (coefk(4,jt,jp), jp = 1, 19), jt = 1, 3)/
     *0.1665,0.1665,0.1665,0.1665,0.1665,0.1665,0.1665,0.1665,0.1665,
     *0.2302,0.2669,0.2868,0.3588,0.4542,0.5773,0.7288,0.8991,1.1137,
     *1.3529,
     *9.417e-04,9.417e-04,9.417e-04,9.417e-04,9.417e-04,9.417e-04,
     *9.417e-04,9.417e-04,9.417e-04,8.954e-04,8.517e-04,7.951e-04,
     *7.207e-04,6.223e-04,5.043e-04,3.506e-04,2.051e-04,2.613e-05,
     *-2.807e-04,
     *1.375e-07,1.375e-07,1.375e-07,1.375e-07,1.375e-07,1.375e-07,
     *1.375e-07,1.375e-07,1.375e-07,-1.031e-07,-4.313e-07,-6.281e-07,
     *-7.875e-07,-4.935e-07,-3.313e-07,-1.969e-07,-6.594e-07,4.719e-07,
     *2.119e-06/
      data ( (coefk(5,jt,jp), jp = 1, 19), jt = 1, 3)/
     *0.4647,0.4647,0.4647,0.4647,0.4647,0.4647,0.4647,0.4647,0.4647,
     *0.4780,0.5007,0.5349,0.5863,0.6577,0.7524,0.8615,0.9559,1.0393,
     *1.0683,
     *1.935e-03,1.935e-03,1.935e-03,1.935e-03,1.935e-03,1.935e-03,
     *1.935e-03,1.935e-03,1.935e-03,1.660e-03,1.660e-03,1.452e-03,
     *1.199e-04,9.196e-04,6.264e-04,3.591e-04,1.091e-04,-1.996e-04,
     *-3.546e-04,
     *-8.781e-07,-8.781e-07,-8.781e-07,-8.781e-07,-8.781e-07,-8.781e-07,
     *-8.781e-07,-8.781e-07,-8.781e-07,-2.406e-07,-1.031e-07,8.656e-07,
     *1.491e-06,1.916e-06,1.072e-06,-9.060e-08,2.031e-07,2.344e-07,
     *1.031e-07/
      data ( (coefk(6,jt,jp), jp = 1, 19), jt = 1, 3)/
     *1.7829,1.7829,1.7829,1.7829,1.7829,1.7829,1.7829,1.7829,1.7829,
     *1.7621,1.7333,1.6882,1.6243,1.5342,1.4156,1.2685,1.0859,0.9148,
     *0.7449,
     *-2.499e-03,-2.499e-03,-2.499e-03,-2.499e-03,-2.499e-03,-2.499e-03,
     *-2.499e-03,-2.499e-03,-2.499e-03,-2.434e-03,-2.312e-03,-2.177e-03,
     *-1.979e-03,-1.782e-03,-1.596e-03,-1.381e-04,-1.164e-03,-1.014e-03,
     *-8.355e-04,
     *2.169e-06,2.169e-06,2.169e-06,2.169e-06,2.169e-06,2.169e-06,
     *2.169e-06,2.169e-06,2.169e-06,2.563e-06,1.206e-06,1.359e-06,
     *1.050e-06,1.434e-06,2.027e-06,2.447e-06,2.628e-06,2.384e-06,
     *2.494e-06/
	data stp / 0.251, 0.398, 0.631, 1.000, 1.58, 2.51, 
     *	             3.98, 6.31, 10.0, 15.8, 25.1, 39.8, 63.1,
     *	             100.0, 158.0, 251.0, 398.0, 631.0, 1000.0/
      do i=1,ni
      do m=1,mlv
        ml=1
        pmb(m)=p(m)*1013.25
        if(pmb(m).lt.stp(1))then
         x1=coefk(i,1,1)+coefk(i,2,1)*(t(m)-250.0)
     *   +coefk(i,3,1)*(t(m)-250.0)**2
         fkg(i,m)=x1*pmb(m)/stp(1)
        else if (pmb(m).gt.stp(19)) then
         x1=coefk(i,1,18)+coefk(i,2,18)*(t(m)-250.0)
     *   +coefk(i,3,18)*(t(m)-250.0)**2
         x2=coefk(i,1,19)+coefk(i,2,19)*(t(m)-250.0)
     *   +coefk(i,3,19)*(t(m)-250.0)**2
         fkg(i,m)=x1+(x2-x1)/(stp(19)-stp(18))
     *  *(pmb(m)-stp(18))
        else
         do while(pmb(m).ge.stp(ml))
           ml=ml+1
         end do
         x1=coefk(i,1,ml-1)+coefk(i,2,ml-1)*(t(m)-250.0)
     *   + coefk(i,3,ml-1)*(t(m)-250.0)**2
         x2=coefk(i,1,ml)+coefk(i,2,ml)*(t(m)-250.0)
     *   + coefk(i,3,ml)*(t(m)-250.0)**2
         fkg(i,m)=x1+(x2-x1)/(stp(ml)-stp(ml-1))
     *   *(pmb(m)-stp(ml-1))
        end if
      end do
      end do
      do i=1,ni
        do m=1,mlv
          tau(i,m)=k(i)*u(m)*fkg(i,m)
c         write(6,*)m,i,u(m),k(i),fkg(i,m),tau(i,m)
        end do
      end do
      return
      end
c *********************************************************************
      subroutine cko3_23(ni,mlv,u,delw,f,p,t,tau)
      INCLUDE "avhrr.inc"
      real f(6),k(mm),tau(6,mm),delw,p(mm),t(mm),u(mm)
      ni=1
      f(1)=1.000000
      k(1)=9.73e-23*6.023e+23/47.9982
      do i=1,ni
        do m=1,mlv
          tau(i,m)=k(i)*u(m)
        end do
      end do
      return
      end
